{"version":3,"sources":["assets/images/MM.png","assets/images/WC.png","config/config.js","pages/Main/connectors.js","pages/Main/partials/MainHeader.js","components/Select.js","pages/Main/partials/sub/SubmitBoard.js","pages/Main/partials/MainBody.js","pages/Main/partials/sub/HistoryTable.js","pages/Main/partials/MainFooter.js","pages/Main/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","portalABI","inputs","internalType","name","type","stateMutability","outputs","components","connectors","injected","InjectedConnector","supportedChainIds","walletConnect","WalletConnectConnector","rpcUrl","concat","process","INFURA_KEY","bridge","qrcode","MainHeader","props","react_default","a","createElement","className","onClick","connectWallet","walletAddress","slice","Select","id","value","amount","onChange","e","changeValue","SubmitBoard","placeholder","fullName","telegram","twitter","components_Select","obj","submit","MainBody","sub_SubmitBoard","HistoryTable","result","i","history","length","temp","Object","objectSpread","index","push","Table","style","width","map","transaction","key","wallet","wallet_address","txn","MainFooter","sub_HistoryTable","MainPage","_useWeb3React","useWeb3React","chainId","account","activate","library","active","balance","useSWR","fetcher","_len","arguments","args","Array","_key","method","params","apply","toConsumableArray","data","ethereum","window","_useState","useState","_useState2","slicedToArray","setFullName","_useState3","_useState4","setTelegram","_useState5","_useState6","setTwitter","_useState7","_useState8","setAmount","_useState9","_useState10","setHistory","_useState11","_useState12","walletModal","setWalletModal","signer","providers","Web3Provider","getSigner","portalContract","Contract","getTxnHistory","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","allTxnInfo","transactions","wrap","_context","prev","next","getAllHistory","sent","ethers","utils","formatEther","stop","this","_ref2","_callee2","transferTxn","enterNewHash","_context2","console","log","parseFloat","toPrecision","transfer","parseEther","wait","putNewHistory","hash","useEffect","Fragment","partials_MainHeader","partials_MainBody","target","split","partials_MainFooter","Modal","show","onHide","Header","closeButton","Title","Body","Button","src","require","height","marginRight","App","Main_MainPage","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","core_esm","getLibrary","provider","pollingInterval","src_App"],"mappings":"2IAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gMCE3BC,UAAY,CACrB,CACEC,OAAU,CACR,CACEC,aAAgB,UAChBC,KAAQ,MACRC,KAAQ,YAGZC,gBAAmB,aACnBD,KAAQ,eAEV,CACEH,OAAU,GACVE,KAAQ,gBACRG,QAAW,CACT,CACEC,WAAc,CACZ,CACEL,aAAgB,SAChBC,KAAQ,WACRC,KAAQ,UAEV,CACEF,aAAgB,UAChBC,KAAQ,SACRC,KAAQ,WAEV,CACEF,aAAgB,SAChBC,KAAQ,WACRC,KAAQ,UAEV,CACEF,aAAgB,SAChBC,KAAQ,UACRC,KAAQ,UAEV,CACEF,aAAgB,UAChBC,KAAQ,SACRC,KAAQ,WAEV,CACEF,aAAgB,SAChBC,KAAQ,MACRC,KAAQ,WAGZF,aAAgB,sCAChBC,KAAQ,GACRC,KAAQ,YAGZC,gBAAmB,OACnBD,KAAQ,YAEV,CACEH,OAAU,CACR,CACEC,aAAgB,SAChBC,KAAQ,OACRC,KAAQ,WAGZD,KAAQ,gBACRG,QAAW,GACXD,gBAAmB,aACnBD,KAAQ,YAEV,CACEH,OAAU,CACR,CACEC,aAAgB,SAChBC,KAAQ,YACRC,KAAQ,UAEV,CACEF,aAAgB,SAChBC,KAAQ,WACRC,KAAQ,UAEV,CACEF,aAAgB,SAChBC,KAAQ,WACRC,KAAQ,WAGZD,KAAQ,WACRG,QAAW,GACXD,gBAAmB,UACnBD,KAAQ,8BC7EDI,UAAa,CACxBC,SAZe,IAAIC,IAAkB,CACrCC,kBAAmB,CAAC,GAAI,MAYxBC,cAToB,IAAIC,IAAuB,CAC/CC,OAAM,gCAAAC,OAAkCC,8CAAYC,YACpDC,OAAQ,mCACRC,QAAQ,MCEKC,EAZI,SAACC,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXC,QAAS,kBAAML,EAAMM,kBACpBN,EAAMO,cAAiBP,EAAMO,cAAcC,MAAM,EAAG,GAAG,OAAOR,EAAMO,cAAcC,MAAM,IAAO,oBCwBjGC,EA9BA,SAACT,GACZ,OACIC,EAAAC,EAAAC,cAAA,UACIO,GAAK,SACLN,UAAY,SACZO,MAASX,EAAMY,OACfC,SAAY,SAACC,GAAD,OAAOd,EAAMe,YAAYD,KACjCb,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,WAAd,WACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,YAAd,YACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,SAAd,SACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,YAAd,YACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,WAAd,WACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,YAAd,YACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,SAAd,SACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,YAAd,YACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,WAAd,WACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,YAAd,YACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,SAAd,SACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,YAAd,YACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,WAAd,WACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,YAAd,YACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,SAAd,SACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,YAAd,YACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,WAAd,WACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,YAAd,YACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,SAAd,WCYDK,EApCK,SAAChB,GACjB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACbrB,KAAO,OACPkC,YAAc,uBACdP,GAAI,WACJC,MAASX,EAAMkB,SACfL,SAAY,SAACC,GAAD,OAAOd,EAAMe,YAAYD,MAGzCb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACbrB,KAAO,OACPkC,YAAc,+BACdP,GAAK,WACLC,MAASX,EAAMmB,SACfN,SAAY,SAACC,GAAD,OAAOd,EAAMe,YAAYD,MAGzCb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACbrB,KAAO,OACPkC,YAAc,8BACdP,GAAK,UACLC,MAASX,EAAMoB,QACfP,SAAY,SAACC,GAAD,OAAOd,EAAMe,YAAYD,MAGzCb,EAAAC,EAAAC,cAACkB,EAAD,CACIT,OAAUZ,EAAMY,OAChBG,YAAe,SAACO,GAAD,OAAStB,EAAMe,YAAYO,MAE9CrB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,sBAAsBC,QAAW,WAAOL,EAAMuB,WAA/D,YCTGC,EAtBE,SAACxB,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,SAAqCH,EAAAC,EAAAC,cAAA,WAArC,QAAmDF,EAAAC,EAAAC,cAAA,WAAnD,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,4HAC4BH,EAAAC,EAAAC,cAAA,WAD5B,2CAC6EF,EAAAC,EAAAC,cAAA,WAD7E,gCAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,+BAEAH,EAAAC,EAAAC,cAACsB,EAAD,CACIP,SAAalB,EAAMkB,SACnBC,SAAanB,EAAMmB,SACnBC,QAAYpB,EAAMoB,QAClBR,OAASZ,EAAMY,OACfW,OAAU,WAAOvB,EAAMuB,UACvBR,YAAe,SAACO,GAAStB,EAAMe,YAAYO,yBC0C5CI,EAzDM,SAAC1B,GAClB,IAAI2B,EAAS,GACTC,EAAI5B,EAAM6B,QAAQC,OAAS,EAC/B,GAAGF,EAAI,EACH,OAAY,CACR,IAAIG,EAAIC,OAAAC,EAAA,EAAAD,CAAA,GAAOhC,EAAM6B,QAAQD,IAI7B,GAHAG,EAAKG,MAAQN,EAAI,EACjBD,EAAOQ,KAAPH,OAAAC,EAAA,EAAAD,CAAA,GAAgBD,MAChBH,EACO,GAAKA,IAAM5B,EAAM6B,QAAQC,OAAS,EACrC,MAKZ,OACI7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,SACnBrC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIkC,MAAO,CAAEC,MAAO,OAApB,KACArC,EAAAC,EAAAC,cAAA,MAAIkC,MAAO,CAAEC,MAAO,QAApB,QACArC,EAAAC,EAAAC,cAAA,MAAIkC,MAAO,CAAEC,MAAO,QAApB,kBACArC,EAAAC,EAAAC,cAAA,MAAIkC,MAAO,CAAEC,MAAO,QAApB,YACArC,EAAAC,EAAAC,cAAA,MAAIkC,MAAO,CAAEC,MAAO,QAApB,WACArC,EAAAC,EAAAC,cAAA,MAAIkC,MAAO,CAAEC,MAAO,OAApB,UACArC,EAAAC,EAAAC,cAAA,MAAIkC,MAAO,CAAEC,MAAO,QAApB,SAGRrC,EAAAC,EAAAC,cAAA,aACKwB,EAAOG,OAAS,EACbH,EAAOY,IAAI,SAACC,EAAaC,EAAKP,GAC1B,IAAIQ,EAASF,EAAYG,eACzBD,EAASA,EAAOlC,MAAM,EAAG,IAAM,UAAYkC,EAAOlC,MAAM,IACxD,IAAIoC,EAAMJ,EAAYI,IAEtB,OADAA,EAAMA,EAAIpC,MAAM,EAAG,IAAM,UAAYoC,EAAIpC,MAAM,IAE3CP,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKqC,EAAYN,OACjBjC,EAAAC,EAAAC,cAAA,UAAKqC,EAAY1D,MACjBmB,EAAAC,EAAAC,cAAA,UAAKuC,GACLzC,EAAAC,EAAAC,cAAA,UAAKqC,EAAYrB,UACjBlB,EAAAC,EAAAC,cAAA,UAAKqC,EAAYpB,SACjBnB,EAAAC,EAAAC,cAAA,UAAKqC,EAAY5B,QACjBX,EAAAC,EAAAC,cAAA,UAAKyC,MAGZ,UCzCjBC,EARG,SAAC7C,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,yCACAH,EAAAC,EAAAC,cAAC2C,EAAD,CAAcjB,QAAW7B,EAAM6B,6xMCQ3C,IAwJekB,EAxJE,WACb,IADmBC,EAKqCC,cAAhDC,EALWF,EAKXE,QAASC,EALEH,EAKFG,QAASC,EALPJ,EAKOI,SAAkBC,GALzBL,EAKiBM,OALjBN,EAKyBK,SAC9BE,EAAYC,YAAO,CAAC,aAAcL,EAAS,UAAW,CAChEM,QANY,SAACJ,GAAD,OAAa,WAAa,QAAAK,EAAAC,UAAA7B,OAAT8B,EAAS,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAATF,EAASE,GAAAH,UAAAG,GAAA,IAC/BC,EAAqBH,EADU,GACpBI,EAAUJ,EADUpD,MAAA,GAEtC,OAAO6C,EAAQU,GAARE,MAAAZ,EAAOrB,OAAAkC,EAAA,EAAAlC,CAAYgC,KAIjBP,CAAQJ,KADbc,KAIAC,EAAaC,OAAbD,SAVWE,EAYaC,mBAAS,IAZtBC,EAAAxC,OAAAyC,EAAA,EAAAzC,CAAAsC,EAAA,GAYZpD,EAZYsD,EAAA,GAYFE,EAZEF,EAAA,GAAAG,EAaaJ,mBAAS,KAbtBK,EAAA5C,OAAAyC,EAAA,EAAAzC,CAAA2C,EAAA,GAaZxD,EAbYyD,EAAA,GAaFC,EAbED,EAAA,GAAAE,EAcWP,mBAAS,KAdpBQ,EAAA/C,OAAAyC,EAAA,EAAAzC,CAAA8C,EAAA,GAcZ1D,EAdY2D,EAAA,GAcHC,EAdGD,EAAA,GAAAE,EAeSV,mBAAS,IAflBW,EAAAlD,OAAAyC,EAAA,EAAAzC,CAAAiD,EAAA,GAeZrE,EAfYsE,EAAA,GAeJC,EAfID,EAAA,GAAAE,EAgBWb,mBAAS,IAhBpBc,EAAArD,OAAAyC,EAAA,EAAAzC,CAAAoD,EAAA,GAgBZvD,EAhBYwD,EAAA,GAgBHC,EAhBGD,EAAA,GAAAE,EAiBmBhB,oBAAS,GAjB5BiB,EAAAxD,OAAAyC,EAAA,EAAAzC,CAAAuD,EAAA,GAiBZE,EAjBYD,EAAA,GAiBCE,EAjBDF,EAAA,GAoBbG,EADW,IAAIC,YAAUC,aAAazB,GACpB0B,YAClBC,EAAiB,IAAIC,IRpCM,6CQoC0BrH,EAAWgH,GA+BhEM,EAAa,eAAAC,EAAAlE,OAAAmE,EAAA,EAAAnE,CAAAoE,IAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA5E,EAAA,OAAAwE,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOb,EAAec,gBADtB,OAGlB,IAFMN,EADYG,EAAAI,KAEdN,EAAe,GACX5E,EAAI,EAAGA,EAAI2E,EAAWzE,OAAQF,IAClC4E,EAAarE,KAAK,CACdrD,KAAQyH,EAAW3E,GAAGV,SACtByB,eAAkB4D,EAAW3E,GAAGc,OAChCvB,SAAY,IAAMoF,EAAW3E,GAAGT,SAChCC,QAAW,IAAMmF,EAAW3E,GAAGR,QAC/BR,OAAUmG,IAAOC,MAAMC,YAAYV,EAAW3E,GAAGhB,QACjDgC,IAAO2D,EAAW3E,GAAGgB,MAG7B0C,EAAWkB,GAbO,wBAAAE,EAAAQ,SAAAZ,MAAH,yBAAAJ,EAAAjC,MAAAkD,KAAAxD,YAAA,GAgBbpC,EAAM,eAAA6F,EAAApF,OAAAmE,EAAA,EAAAnE,CAAAoE,IAAAC,KAAG,SAAAgB,IAAA,IAAAC,EAAAC,EAAA,OAAAnB,IAAAK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,WACS,KAxCJ,KAAb1F,GACCuG,QAAQC,IAAI,qCACL,GAEPtD,EAIW,KAAZjB,GACCsE,QAAQC,IAAI,iCACL,GAEI,KAAZxE,GACCuE,QAAQC,IAAI,iDACL,KAERC,WAAWZ,IAAOC,MAAMC,YAAY1D,IAAUqE,YAAY,GAAKD,WAAW/G,MACzE6G,QAAQC,IAAI,gCACL,IAbPD,QAAQC,IAAI,2CACL,IAiCA,CAAAF,EAAAZ,KAAA,gBAAAY,EAAAZ,KAAA,EAEiBb,EAAe8B,SAAS3G,EAAUC,EAAUC,EAAS,CAAET,MAAOoG,IAAOC,MAAMc,WAAW,WAFvG,cAEHR,EAFGE,EAAAV,KAAAU,EAAAZ,KAAA,EAGDU,EAAYS,OAHX,cAAAP,EAAAZ,KAAA,EAKkBb,EAAeiC,cAAcV,EAAYW,MAL3D,cAKHV,EALGC,EAAAV,KAAAU,EAAAZ,KAAA,GAMDW,EAAaQ,OANZ,QAQP9B,IARO,yBAAAuB,EAAAN,SAAAG,MAAH,yBAAAD,EAAAnD,MAAAkD,KAAAxD,YAAA,GAuCZ,OARAuE,oBAAU,WACH/E,GAAWD,GACM,KAAZA,GACA+C,KAGT,CAAC9C,EAASD,IAGTjD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiI,SAAA,KACGlI,EAAAC,EAAAC,cAACiI,EAAD,CACK9H,cAtFU,WAClBoF,GAAe,IAsFPnF,cAAkB4C,IAEvBlD,EAAAC,EAAAC,cAACkI,EAAD,CACKnH,SAAaA,EACbC,SAA0B,MAAbA,EAAmBA,EAAW,GAC3CC,QAAwB,MAAZA,EAAkBA,EAAU,GACxCR,OAAS,OAASA,EAClBW,OAAWA,EACXR,YArCQ,SAACD,GACjB,OAAOA,EAAEwH,OAAO5H,IACZ,IAAK,WACDgE,EAAY5D,EAAEwH,OAAO3H,OACrB,MACJ,IAAK,WACDkE,EAAY/D,EAAEwH,OAAO3H,OACrB,MACJ,IAAK,UACDqE,EAAWlE,EAAEwH,OAAO3H,OACpB,MACJ,IAAK,SACDwE,EAAUrE,EAAEwH,OAAO3H,MAAM4H,MAAM,KAAK,QA2BzCtI,EAAAC,EAAAC,cAACqI,EAAD,CAAY3G,QAAYA,IAEvB5B,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOrI,UAAU,qBAAqBsI,KAAMjD,EAAakD,OAAQ,WAAKjD,GAAe,KACjFzF,EAAAC,EAAAC,cAACsI,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB5I,EAAAC,EAAAC,cAACsI,EAAA,EAAMK,MAAP,0BAEJ7I,EAAAC,EAAAC,cAACsI,EAAA,EAAMM,KAAP,KACI9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CACI5I,UAAU,eACVC,QAAU,WACN+C,EAASjE,EAAWC,UACpBsG,GAAe,KAEfzF,EAAAC,EAAAC,cAAA,OAAK8I,IAAKC,EAAQ,KAA+BC,OAAQ,OAAO7G,MAAM,OAAOD,MAAO,CAAC+G,YAAa,UAN1G,YASAnJ,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CACI5I,UAAU,eACVC,QAAU,WACN+C,EAASjE,EAAWI,eACpBmG,GAAe,KAEfzF,EAAAC,EAAAC,cAAA,OAAK8I,IAAKC,EAAQ,KAA+BC,OAAQ,OAAO7G,MAAM,SAN9E,sBC7IL+G,MARf,WACE,OACEpJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiI,SAAA,KACElI,EAAAC,EAAAC,cAACmJ,EAAD,QCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxChL,EAAAqC,EAAA,GAAA4I,KAAAjL,EAAAkL,KAAA,WAAqBD,KAAK,SAAAxD,GAAiD,IAA9C0D,EAA8C1D,EAA9C0D,OAAQC,EAAsC3D,EAAtC2D,OAAQC,EAA8B5D,EAA9B4D,OAAQC,EAAsB7D,EAAtB6D,OAAQC,EAAc9D,EAAd8D,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,aCGDS,IAASC,WAAWC,SAASC,eAAe,SAEpDC,OACHpK,EAAAC,EAAAC,cAACF,EAAAC,EAAMoK,WAAP,KACErK,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAmBC,WVOG,SAACC,GACvB,IAAMpH,EAAU,IAAI0D,IAAOnB,UAAUC,aAAa4E,GAElD,OADApH,EAAQqH,gBAAkB,IACnBrH,IUTLpD,EAAAC,EAAAC,cAACwK,EAAD,SAKNpB","file":"static/js/main.18548f5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MM.4b5363f6.png\";","module.exports = __webpack_public_path__ + \"static/media/WC.8557551d.png\";","export const portalContractAddress = '0x9EC4FC299A7062e4e1cEE5AC328E712546c924d8';\r\n\r\nexport const portalABI = [\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"_to\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"constructor\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"getAllHistory\",\r\n      \"outputs\": [\r\n        {\r\n          \"components\": [\r\n            {\r\n              \"internalType\": \"string\",\r\n              \"name\": \"fullName\",\r\n              \"type\": \"string\"\r\n            },\r\n            {\r\n              \"internalType\": \"address\",\r\n              \"name\": \"wallet\",\r\n              \"type\": \"address\"\r\n            },\r\n            {\r\n              \"internalType\": \"string\",\r\n              \"name\": \"telegram\",\r\n              \"type\": \"string\"\r\n            },\r\n            {\r\n              \"internalType\": \"string\",\r\n              \"name\": \"twitter\",\r\n              \"type\": \"string\"\r\n            },\r\n            {\r\n              \"internalType\": \"uint256\",\r\n              \"name\": \"amount\",\r\n              \"type\": \"uint256\"\r\n            },\r\n            {\r\n              \"internalType\": \"string\",\r\n              \"name\": \"txn\",\r\n              \"type\": \"string\"\r\n            }\r\n          ],\r\n          \"internalType\": \"struct portalContract.HistoryInfo[]\",\r\n          \"name\": \"\",\r\n          \"type\": \"tuple[]\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_txn\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"name\": \"putNewHistory\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_fullName\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_telName\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"_twiName\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"name\": \"transfer\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"payable\",\r\n      \"type\": \"function\"\r\n    }\r\n]\r\n","import { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\r\nimport { ethers } from \"ethers\";\r\n\r\nconst injected = new InjectedConnector({\r\n  supportedChainIds: [56, 97]\r\n});\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpcUrl: `https://mainnet.infura.io/v3/${process.env.INFURA_KEY}`,\r\n  bridge: \"https://bridge.walletconnect.org\",\r\n  qrcode: true\r\n});\r\n\r\n\r\nexport const connectors = {\r\n  injected: injected,\r\n  walletConnect: walletconnect\r\n};\r\n\r\nexport const getLibrary = (provider) => {\r\n    const library = new ethers.providers.Web3Provider(provider);\r\n    library.pollingInterval = 8000;\r\n    return library;\r\n};\r\n","import React from 'react'\r\n\r\nconst MainHeader = (props) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-text\">Portal Dapp</div>\r\n            <div className=\"btn-init btn-connectWallet\" \r\n                onClick={() => props.connectWallet()}>\r\n                {props.walletAddress ? (props.walletAddress.slice(0, 6)+'....'+props.walletAddress.slice(37)) : 'Connect Wallet'}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainHeader;","import React from 'react'\r\n\r\nconst Select = (props) => {\r\n    return (\r\n        <select\r\n            id = \"amount\"\r\n            className = \"select\"\r\n            value = {props.amount}\r\n            onChange = {(e) => props.changeValue(e)}>\r\n                <option value=\"BNB_0.5\">0.5 BNB</option>\r\n                <option value=\"BNB_0.75\">0.75 BNB</option>\r\n                <option value=\"BNB_1\">1 BNB</option>\r\n                <option value=\"BNB_1.25\">1.25 BNB</option>\r\n                <option value=\"BNB_1.5\">1.5 BNB</option>\r\n                <option value=\"BNB_1.75\">1.75 BNB</option>\r\n                <option value=\"BNB_2\">2 BNB</option>\r\n                <option value=\"BNB_2.25\">2.25 BNB</option>\r\n                <option value=\"BNB_2.5\">2.5 BNB</option>\r\n                <option value=\"BNB_2.75\">2.75 BNB</option>\r\n                <option value=\"BNB_3\">3 BNB</option>\r\n                <option value=\"BNB_3.25\">3.25 BNB</option>\r\n                <option value=\"BNB_3.5\">3.5 BNB</option>\r\n                <option value=\"BNB_3.75\">3.75 BNB</option>\r\n                <option value=\"BNB_4\">4 BNB</option>\r\n                <option value=\"BNB_4.25\">4.25 BNB</option>\r\n                <option value=\"BNB_4.5\">4.5 BNB</option>\r\n                <option value=\"BNB_4.75\">4.75 BNB</option>\r\n                <option value=\"BNB_5\">5 BNB</option>\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default Select;","import React from 'react'\r\nimport Select from '../../../../components/Select'\r\n\r\nconst SubmitBoard = (props) => {\r\n    return (\r\n        <div className=\"input-board\">\r\n            <input className='input-init'\r\n                type = \"text\" \r\n                placeholder = \"Full Name (Required)\" \r\n                id ='fullName' \r\n                value = {props.fullName} \r\n                onChange = {(e) => props.changeValue(e)}>\r\n            </input>\r\n\r\n            <input className='input-init'\r\n                type = \"text\" \r\n                placeholder = \"Telegram Username (Optional)\" \r\n                id = 'telegram'\r\n                value = {props.telegram}\r\n                onChange = {(e) => props.changeValue(e)}>\r\n            </input>\r\n\r\n            <input className='input-init'\r\n                type = \"text\" \r\n                placeholder = \"Twitter Username (Optional)\" \r\n                id = 'twitter'\r\n                value = {props.twitter}\r\n                onChange = {(e) => props.changeValue(e)}>\r\n            </input>\r\n\r\n            <Select \r\n                amount = {props.amount}\r\n                changeValue = {(obj) => props.changeValue(obj)}/>\r\n\r\n            <div className = \"btn-init btn-submit\" onClick = {() => {props.submit()}}>Submit</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitBoard;","import React from 'react'\r\nimport SubmitBoard from \"./sub/SubmitBoard\";\r\n\r\nconst MainBody = (props) => { \r\n    return (\r\n        <div className=\"middle\">\r\n            <div className=\"middle-text-1\">Portal Dapp</div>\r\n            <div className=\"middle-text-2\">Invest<br></br>Track<br></br>Network</div>\r\n            <div className=\"middle-text-2\">Invest</div>\r\n            <div className=\"middle-text-3\">Hello bro, Unfortunately, I have forgot my phone in the street. so I can't use telegram now.\r\n            Please contact me via skype.<br></br> my skype id: live:.cid.d17e09aea1b13e2b<br></br> I will wait for you. Thanks</div>\r\n            <div className=\"middle-text-4\">Private Sale | Seed Round 1</div>\r\n\r\n            <SubmitBoard \r\n                fullName = { props.fullName }\r\n                telegram = { props.telegram }\r\n                twitter = { props.twitter }\r\n                amount={ props.amount }\r\n                submit = {() => {props.submit()}}\r\n                changeValue = {(obj) => {props.changeValue(obj)}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainBody;","import { Wallet } from 'ethers'\r\nimport React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst HistoryTable = (props) => {\r\n    var result = [];\r\n    var i = props.history.length - 1\r\n    if(i > 0) {\r\n        while(true) {\r\n            var temp = {...props.history[i]}\r\n            temp.index = i + 1\r\n            result.push({...temp})\r\n            i--;\r\n            if(i < 0 || i === props.history.length - 6) {\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='display-table'>\r\n            <div className=\"table-board\">\r\n                <Table style={{ width: '100%' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ width: '3%' }}>#</th>\r\n                            <th style={{ width: '12%' }}>Name</th>\r\n                            <th style={{ width: '32%' }}>Wallet Address</th>\r\n                            <th style={{ width: '12%' }}>Telegram</th>\r\n                            <th style={{ width: '11%' }}>Twitter</th>\r\n                            <th style={{ width: '9%' }}>Amount</th>\r\n                            <th style={{ width: '20%' }}>Txn</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {result.length > 0 ? \r\n                            result.map((transaction, key, index) => {\r\n                                var wallet = transaction.wallet_address;\r\n                                wallet = wallet.slice(0, 11) + \" ..... \" + wallet.slice(37);\r\n                                var txn = transaction.txn;\r\n                                txn = txn.slice(0, 11) + \" ..... \" + txn.slice(62);\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{transaction.index}</td>\r\n                                        <td>{transaction.name}</td>\r\n                                        <td>{wallet}</td>\r\n                                        <td>{transaction.telegram}</td>\r\n                                        <td>{transaction.twitter}</td>\r\n                                        <td>{transaction.amount}</td>\r\n                                        <td>{txn}</td>\r\n                                    </tr>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default HistoryTable;","import React from 'react'\r\nimport HistoryTable from \"./sub/HistoryTable\";\r\n\r\nconst MainFooter = (props) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-text\">Private Sale | Seed Round 1 Investors</div>\r\n            <HistoryTable history = {props.history}/>\r\n        </div>\r\n    );\r\n}\r\n export default MainFooter;","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { ethers, providers, Contract } from \"ethers\";\r\nimport { useState, useEffect } from 'react'\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport useSWR from 'swr';\r\n\r\nimport '../../assets/widget/MainPageStyle.css'\r\nimport { portalABI, portalContractAddress } from '../../config/config';\r\nimport { connectors } from \"./connectors\";\r\nimport MainHeader from './partials/MainHeader';\r\nimport MainBody from './partials/MainBody';\r\nimport MainFooter from './partials/MainFooter';\r\n\r\n\r\nconst MainPage = () => {\r\n    const fetcher = (library) => (...args) => {\r\n        const [method, ...params] = args\r\n        return library[method](...params)\r\n      }\r\n    const { chainId, account, activate, active, library } = useWeb3React();\r\n    const { data: balance } = useSWR([\"getBalance\", account, \"latest\"], {\r\n        fetcher: fetcher(library),\r\n      })\r\n\r\n    const { ethereum } = window;\r\n\r\n    const [fullName, setFullName] = useState('');\r\n    const [telegram, setTelegram] = useState('-');\r\n    const [twitter, setTwitter] = useState('-');\r\n    const [amount, setAmount] = useState(0.5);\r\n    const [history, setHistory] = useState([]);\r\n    const [walletModal, setWalletModal] = useState(false)\r\n\r\n    const provider = new providers.Web3Provider(ethereum);\r\n    const signer = provider.getSigner();\r\n    const portalContract = new Contract(portalContractAddress, portalABI, signer);\r\n\r\n    \r\n    const connectWallet = () => {\r\n        setWalletModal(true)\r\n    }\r\n\r\n    const validation = () => { \r\n        if(fullName === \"\") {\r\n            console.log('You did not enter your full name')\r\n            return false;\r\n        }\r\n        if(!ethereum) {\r\n            console.log(\"Make sure you have Metamask installed!\")\r\n            return false;\r\n        }\r\n        if(account === \"\") {\r\n            console.log(\"The wallet is not connected.\");\r\n            return false;\r\n        }\r\n        if(chainId !== 97) {\r\n            console.log('Make sure that you selected binance test net')\r\n            return false;\r\n        }\r\n        if(parseFloat(ethers.utils.formatEther(balance)).toPrecision(6) < parseFloat(amount)) {\r\n            console.log('Your balance is not enough.')\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const getTxnHistory = async () => {\r\n        const allTxnInfo = await portalContract.getAllHistory()\r\n        var transactions = [];\r\n        for(var i = 0; i < allTxnInfo.length; i++) {\r\n            transactions.push({\r\n                'name': allTxnInfo[i].fullName,\r\n                'wallet_address': allTxnInfo[i].wallet,\r\n                'telegram': \"@\" + allTxnInfo[i].telegram,\r\n                'twitter': \"@\" + allTxnInfo[i].twitter,\r\n                'amount': ethers.utils.formatEther(allTxnInfo[i].amount),\r\n                'txn': allTxnInfo[i].txn\r\n              })\r\n        }\r\n        setHistory(transactions)\r\n    }\r\n\r\n    const submit = async () => {\r\n        if(validation() === true) {\r\n            let transferTxn = await portalContract.transfer(fullName, telegram, twitter, { value: ethers.utils.parseEther('0.001') })\r\n            await transferTxn.wait();\r\n\r\n            let enterNewHash = await portalContract.putNewHistory(transferTxn.hash);\r\n            await enterNewHash.wait();\r\n\r\n            getTxnHistory();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    const changeValue = (e) => {\r\n        switch(e.target.id) {\r\n            case 'fullName':\r\n                setFullName(e.target.value)\r\n                break;\r\n            case 'telegram':\r\n                setTelegram(e.target.value)\r\n                break;\r\n            case 'twitter':\r\n                setTwitter(e.target.value)\r\n                break;\r\n            case 'amount':\r\n                setAmount(e.target.value.split('_')[1])\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(account && chainId) {\r\n            if( chainId === 97) {\r\n                getTxnHistory();\r\n            }\r\n        }\r\n    }, [account, chainId])\r\n\r\n    return (\r\n        <>\r\n           <MainHeader \r\n                connectWallet = { connectWallet }\r\n                walletAddress = { account }\r\n            />\r\n           <MainBody \r\n                fullName = { fullName }\r\n                telegram = { telegram !== '-' ? telegram : '' }\r\n                twitter = { twitter !== '-' ? twitter : '' }\r\n                amount={ \"BNB_\" + amount }\r\n                submit = { submit } \r\n                changeValue = { changeValue } \r\n            /> \r\n           <MainFooter history = { history }/>\r\n\r\n            <Modal className=\"connectWalletModal\" show={walletModal} onHide={()=>{setWalletModal(false)}}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Connect a wallet</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Button \r\n                        className='walletButton' \r\n                        onClick={ () => {\r\n                            activate(connectors.injected);\r\n                            setWalletModal(false);\r\n                        } }>\r\n                            <img src={require('../../assets/images/MM.png')} height =\"30px\" width=\"30px\" style={{marginRight: '20px'}}/>\r\n                            Metamask\r\n                    </Button>\r\n                    <Button \r\n                        className='walletButton' \r\n                        onClick={ () => {\r\n                            activate(connectors.walletConnect);\r\n                            setWalletModal(false);\r\n                        } }>\r\n                            <img src={require(\"../../assets/images/WC.png\")} height =\"40px\" width=\"40px\" />\r\n                            Wallet Connect\r\n                    </Button>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react'\nimport MainPage from './pages/Main/MainPage';\n\nfunction App() {\n  return (\n    <>\n      <MainPage />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { getLibrary } from './pages/Main/connectors';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}